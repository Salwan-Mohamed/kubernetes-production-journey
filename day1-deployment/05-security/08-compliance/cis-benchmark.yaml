---
# kube-bench Job for CIS Kubernetes Benchmark
apiVersion: batch/v1
kind: Job
metadata:
  name: kube-bench
  namespace: security
spec:
  template:
    metadata:
      labels:
        app: kube-bench
    spec:
      hostPID: true
      hostNetwork: true
      serviceAccountName: kube-bench
      containers:
      - name: kube-bench
        image: aquasec/kube-bench:v0.7.1
        command: ["kube-bench"]
        args:
        - "run"
        - "--targets"
        - "master,node,etcd,policies"
        - "--json"
        volumeMounts:
        - name: var-lib-etcd
          mountPath: /var/lib/etcd
          readOnly: true
        - name: var-lib-kubelet
          mountPath: /var/lib/kubelet
          readOnly: true
        - name: var-lib-kube-scheduler
          mountPath: /var/lib/kube-scheduler
          readOnly: true
        - name: var-lib-kube-controller-manager
          mountPath: /var/lib/kube-controller-manager
          readOnly: true
        - name: etc-systemd
          mountPath: /etc/systemd
          readOnly: true
        - name: lib-systemd
          mountPath: /lib/systemd/
          readOnly: true
        - name: etc-kubernetes
          mountPath: /etc/kubernetes
          readOnly: true
        - name: etc-cni-netd
          mountPath: /etc/cni/net.d/
          readOnly: true
      restartPolicy: Never
      volumes:
      - name: var-lib-etcd
        hostPath:
          path: /var/lib/etcd
      - name: var-lib-kubelet
        hostPath:
          path: /var/lib/kubelet
      - name: var-lib-kube-scheduler
        hostPath:
          path: /var/lib/kube-scheduler
      - name: var-lib-kube-controller-manager
        hostPath:
          path: /var/lib/kube-controller-manager
      - name: etc-systemd
        hostPath:
          path: /etc/systemd
      - name: lib-systemd
        hostPath:
          path: /lib/systemd
      - name: etc-kubernetes
        hostPath:
          path: /etc/kubernetes
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d/
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-bench
  namespace: security
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-bench
rules:
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["clusterroles", "clusterrolebindings"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-bench
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-bench
subjects:
- kind: ServiceAccount
  name: kube-bench
  namespace: security
---
# Polaris configuration for workload validation
apiVersion: v1
kind: ConfigMap
metadata:
  name: polaris-config
  namespace: security
data:
  config.yaml: |
    checks:
      # Security
      hostIPCSet: danger
      hostPIDSet: danger
      hostNetworkSet: warning
      hostPortSet: warning
      privilegeEscalationAllowed: danger
      runAsRootAllowed: warning
      runAsPrivileged: danger
      insecureCapabilities: warning
      dangerousCapabilities: danger
      
      # Resources
      cpuRequestsMissing: warning
      cpuLimitsMissing: warning
      memoryRequestsMissing: warning
      memoryLimitsMissing: warning
      
      # Images
      tagNotSpecified: danger
      pullPolicyNotAlways: warning
      
      # Networking
      hostNetworkSet: warning
      hostPortSet: warning
      
      # Health Checks
      readinessProbeMissing: warning
      livenessProbeMissing: warning
    
    exemptions:
    - namespace: kube-system
      controllerNames:
      - kube-apiserver
      - kube-proxy
      - kube-scheduler
      - etcd-manager-events
      - kube-controller-manager
      - kube-dns
      - etcd-manager-main
