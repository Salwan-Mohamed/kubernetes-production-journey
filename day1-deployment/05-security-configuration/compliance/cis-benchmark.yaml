---
# CronJob to run CIS Kubernetes Benchmark using kube-bench
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cis-benchmark
  namespace: security
spec:
  # Run weekly on Sunday at 3 AM
  schedule: "0 3 * * 0"
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: cis-benchmark
        spec:
          restartPolicy: Never
          hostPID: true
          
          containers:
          - name: kube-bench
            image: aquasec/kube-bench:latest
            command:
            - /bin/sh
            - -c
            - |
              #!/bin/sh
              set -e
              
              echo "Running CIS Kubernetes Benchmark..."
              
              # Run kube-bench and save results
              kube-bench run --targets node,master,controlplane,etcd,policies \
                --json > /tmp/cis-results.json
              
              # Generate summary
              echo ""
              echo "=== CIS Benchmark Summary ==="
              cat /tmp/cis-results.json | jq -r '
                .Totals |
                "Total Checks: \(.total_pass + .total_fail + .total_warn + .total_info)",
                "Passed: \(.total_pass)",
                "Failed: \(.total_fail)",
                "Warnings: \(.total_warn)",
                "Info: \(.total_info)"
              '
              
              # Upload results to S3 or report system
              # aws s3 cp /tmp/cis-results.json s3://compliance-reports/cis/
              
              # Send alerts if failures exceed threshold
              FAILED=$(cat /tmp/cis-results.json | jq '.Totals.total_fail')
              if [ "$FAILED" -gt "10" ]; then
                echo "WARNING: $FAILED checks failed!"
                # Send alert to Slack/PagerDuty
              fi
            
            volumeMounts:
            - name: var-lib-etcd
              mountPath: /var/lib/etcd
              readOnly: true
            - name: var-lib-kubelet
              mountPath: /var/lib/kubelet
              readOnly: true
            - name: etc-systemd
              mountPath: /etc/systemd
              readOnly: true
            - name: etc-kubernetes
              mountPath: /etc/kubernetes
              readOnly: true
            - name: usr-bin
              mountPath: /usr/local/mount-from-host/bin
              readOnly: true
            
            securityContext:
              privileged: true
          
          volumes:
          - name: var-lib-etcd
            hostPath:
              path: /var/lib/etcd
          - name: var-lib-kubelet
            hostPath:
              path: /var/lib/kubelet
          - name: etc-systemd
            hostPath:
              path: /etc/systemd
          - name: etc-kubernetes
            hostPath:
              path: /etc/kubernetes
          - name: usr-bin
            hostPath:
              path: /usr/bin

---
# Job to run kube-bench on-demand
apiVersion: batch/v1
kind: Job
metadata:
  name: cis-benchmark-manual
  namespace: security
spec:
  template:
    metadata:
      labels:
        app: cis-benchmark
    spec:
      restartPolicy: Never
      hostPID: true
      
      containers:
      - name: kube-bench
        image: aquasec/kube-bench:latest
        command: ["kube-bench", "run", "--targets", "node,master,controlplane,etcd,policies"]
        
        volumeMounts:
        - name: var-lib-etcd
          mountPath: /var/lib/etcd
          readOnly: true
        - name: var-lib-kubelet
          mountPath: /var/lib/kubelet
          readOnly: true
        - name: etc-systemd
          mountPath: /etc/systemd
          readOnly: true
        - name: etc-kubernetes
          mountPath: /etc/kubernetes
          readOnly: true
        - name: usr-bin
          mountPath: /usr/local/mount-from-host/bin
          readOnly: true
        
        securityContext:
          privileged: true
      
      volumes:
      - name: var-lib-etcd
        hostPath:
          path: /var/lib/etcd
      - name: var-lib-kubelet
        hostPath:
          path: /var/lib/kubelet
      - name: etc-systemd
        hostPath:
          path: /etc/systemd
      - name: etc-kubernetes
        hostPath:
          path: /etc/kubernetes
      - name: usr-bin
        hostPath:
          path: /usr/bin
