---
# Secure Pod Configuration Example
# Demonstrates all security best practices
apiVersion: apps/v1
kind: Deployment
metadata:
  name: secure-app
  namespace: production
  labels:
    app: secure-app
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: secure-app
  template:
    metadata:
      labels:
        app: secure-app
        version: v1
      annotations:
        # Force injection if using Istio
        sidecar.istio.io/inject: "true"
    spec:
      # Disable automounting of service account token
      automountServiceAccountToken: false
      
      # Use dedicated service account
      serviceAccountName: secure-app
      
      # Pod-level security context
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 3000
        fsGroup: 2000
        # Require seccomp profile
        seccompProfile:
          type: RuntimeDefault
      
      containers:
      - name: app
        image: myregistry.io/secure-app:v1.2.3
        
        # Container-level security context
        securityContext:
          # Run as non-root
          runAsNonRoot: true
          runAsUser: 1000
          
          # Read-only root filesystem
          readOnlyRootFilesystem: true
          
          # Disallow privilege escalation
          allowPrivilegeEscalation: false
          
          # Drop all capabilities
          capabilities:
            drop:
            - ALL
        
        # Resource limits (required by policy)
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        
        # Writable volume for temp files
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /app/cache
        
        # Health probes
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        
        # Environment variables (no secrets!)
        env:
        - name: LOG_LEVEL
          value: "info"
        - name: PORT
          value: "8080"
      
      # Writable volumes (emptyDir)
      volumes:
      - name: tmp
        emptyDir:
          sizeLimit: 100Mi
      - name: cache
        emptyDir:
          sizeLimit: 500Mi

---
# Service Account (no automatic token mounting)
apiVersion: v1
kind: ServiceAccount
metadata:
  name: secure-app
  namespace: production
automountServiceAccountToken: false
