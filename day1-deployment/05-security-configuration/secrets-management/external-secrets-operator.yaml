---
# External Secrets Operator - SecretStore for Vault
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: vault-backend
  namespace: production
spec:
  provider:
    vault:
      server: "https://vault.vault.svc.cluster.local:8200"
      path: "secret"
      version: "v2"
      auth:
        # Kubernetes authentication
        kubernetes:
          mountPath: "kubernetes"
          role: "production-app"
          serviceAccountRef:
            name: external-secrets
      caBundle: "LS0tLS1CRUdJTi...(base64 encoded CA cert)..."

---
# ClusterSecretStore for cross-namespace access
apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: vault-cluster-backend
spec:
  provider:
    vault:
      server: "https://vault.vault.svc.cluster.local:8200"
      path: "secret"
      version: "v2"
      auth:
        kubernetes:
          mountPath: "kubernetes"
          role: "cluster-secrets"
          serviceAccountRef:
            name: external-secrets
            namespace: external-secrets-system

---
# ExternalSecret - Database Credentials
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: database-credentials
  namespace: production
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: db-credentials
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        username: "{{ .username }}"
        password: "{{ .password }}"
        host: "{{ .host }}"
        port: "{{ .port }}"
        database: "{{ .database }}"
  data:
  - secretKey: username
    remoteRef:
      key: database/production/postgres
      property: username
  - secretKey: password
    remoteRef:
      key: database/production/postgres
      property: password
  - secretKey: host
    remoteRef:
      key: database/production/postgres
      property: host
  - secretKey: port
    remoteRef:
      key: database/production/postgres
      property: port
  - secretKey: database
    remoteRef:
      key: database/production/postgres
      property: database

---
# ExternalSecret - API Keys
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: api-credentials
  namespace: production
spec:
  refreshInterval: 6h
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: app-credentials
    creationPolicy: Owner
  data:
  - secretKey: stripe-api-key
    remoteRef:
      key: api-keys/production/stripe
      property: api_key
  - secretKey: sendgrid-api-key
    remoteRef:
      key: api-keys/production/sendgrid
      property: api_key
  - secretKey: aws-access-key-id
    remoteRef:
      key: api-keys/production/aws
      property: access_key_id
  - secretKey: aws-secret-access-key
    remoteRef:
      key: api-keys/production/aws
      property: secret_access_key

---
# ExternalSecret - TLS Certificates
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: tls-certificates
  namespace: production
spec:
  refreshInterval: 24h
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: app-tls
    creationPolicy: Owner
    template:
      type: kubernetes.io/tls
      data:
        tls.crt: "{{ .cert }}"
        tls.key: "{{ .key }}"
  data:
  - secretKey: cert
    remoteRef:
      key: certificates/production/app
      property: certificate
  - secretKey: key
    remoteRef:
      key: certificates/production/app
      property: private_key
